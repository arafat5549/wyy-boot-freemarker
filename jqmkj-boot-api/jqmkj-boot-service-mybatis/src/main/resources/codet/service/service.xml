<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>service</name>
    <filePath>src/main/java/${packageName}/${moduleName}/service/${subModuleName}</filePath>
    <fileName>${ClassName}Service.java</fileName>
    <content><![CDATA[
/**
 * Copyright &copy; 2018 <a href="https://github.com/somewhereMrli/jqmkj-boot">jqmkj-boot</a> All rights reserved.
 */
package ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;


import com.jqmkj.java.util.base.Assert;
import com.jqmkj.java.common.persistence.service.DataVoService;
import ${packageName}.${moduleName}.domain<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.domain.vo<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Vo;
<#if (table.compositeId)!>
import ${packageName}.${moduleName}.domain<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Id;
</#if>
import ${packageName}.${moduleName}.repository.${ClassName}Repository;

/**
 * ${functionName}Service ${functionNameSimple}
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Service
@Transactional(rollbackFor = Exception.class)
public class ${ClassName}Service extends DataVoService<${ClassName}Repository, ${ClassName}, String, ${ClassName}Vo>{

    @Transactional(readOnly = true, rollbackFor = Exception.class)
    public void checkProperty(${ClassName}Vo ${className}Vo){
        <#assign firstListField = true><#list table.columnList as column>
			<#if column.unique && !column.pk>
		<#if firstListField><#assign firstListField = false>${ClassName} </#if>${className}Validate = new ${ClassName}(${className}Vo.getId());
		${className}Validate.set${column.simpleJavaField?cap_first}(${className}Vo.get${column.simpleJavaField?cap_first}());
		Assert.assertIsTrue(<#if column.nullable>PublicUtil.isEmpty(${className}Vo.get${column.simpleJavaField?cap_first}()) || </#if>checkByProperty(${className}Validate),
		PublicUtil.toAppendStr("保存${functionNameSimple}'", ${className}Vo.get${column.simpleJavaField?cap_first}(),"'失败，${column.comments }已存在"))
		</#if>
		</#list>
    }

}
]]>
    </content>
</template>
